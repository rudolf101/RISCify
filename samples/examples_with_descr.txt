Instruction:   lw x5, 0(x10)   # x5 = x10
-----------------------------------------------------
Field         | Binary                | Info
-----------------------------------------------------
imm[11:0]     | 000000000000          | 0
rs1           | 01010                 | x10
funct3        | 010                   | load word
rd            | 00101                 | x5
opcode        | 0000011               |
-----------------------------------------------------
Assembled:    | 000000000000 01010 010 00101 0000011
-----------------------------------------------------

Instruction:   addi x5, x0, 10   # x5 = 10
-----------------------------------------------------
Field         | Binary                | Info
-----------------------------------------------------
imm[11:0]     | 000000001010          | 10
rs1           | 00000                 | x0
funct3        | 000                   | add immediate
rd            | 00101                 | x5
opcode        | 0010011               |
-----------------------------------------------------
Assembled:    | 000000001010 00000 000 00101 0010011
-----------------------------------------------------

Instruction:   add x7, x5, x6   # x7 = x5 + x6
-----------------------------------------------------
Field         | Binary                | Info
-----------------------------------------------------
funct7        | 0000000               | 
rs2           | 00110                 | x6 
rs1	      | 00101		      | x5
funct3        | 000                   |
rd            | 00111                 | x7
opcode        | 0110011               |
-----------------------------------------------------
Assembled:    | 0000000 00110 00101 000 00111 0110011
-----------------------------------------------------

Instruction:   sub x7, x5, x6   # x7 = x5 - x6
-----------------------------------------------------
Field         | Binary                | Info
-----------------------------------------------------
funct7        | 0100000               | 
rs2           | 00110                 | x6 
rs1	      | 00101		      | x5
funct3        | 000                   |
rd            | 00111                 | x7
opcode        | 0110011               |
-----------------------------------------------------
Assembled:    | 0100000 00110 00101 000 00111 0110011
-----------------------------------------------------

Instruction:   and x8, x5, x6   # x8 = x5 & x6
-----------------------------------------------------
Field         | Binary                | Info
-----------------------------------------------------
funct7        | 0000000               |
rs2           | 00110                 | x6
rs1           | 00101                 | x5
funct3        | 111                   | and
rd            | 01000                 | x8
opcode        | 0110011               |
-----------------------------------------------------
Assembled:    | 0000000 00110 00101 111 01000 0110011
-----------------------------------------------------

Instruction:   or x9, x5, x6   # x9 = x5 | x6
-----------------------------------------------------
Field         | Binary                | Info
-----------------------------------------------------
funct7        | 0000000               |
rs2           | 00110                 | x6
rs1           | 00101                 | x5
funct3        | 110                   | or
rd            | 01001                 | x9
opcode        | 0110011               |
-----------------------------------------------------
Assembled:    | 0000000 00110 00101 110 01001 0110011
-----------------------------------------------------

Instruction:   sll x12, x5, x6   # x12 = x5 << x6
-----------------------------------------------------
Field         | Binary                | Info
-----------------------------------------------------
funct7        | 0000000               |
rs2           | 00110                 | x6
rs1           | 00101                 | x5
funct3        | 001                   | shift left logical
rd            | 01100                 | x12
opcode        | 0110011               |
-----------------------------------------------------
Assembled:    | 0000000 00110 00101 001 01100 0110011
-----------------------------------------------------

Instruction:   srl x12, x5, x6   # x12 = x5 >> x6
-----------------------------------------------------
Field         | Binary                | Info
-----------------------------------------------------
funct7        | 0000000               |
rs2           | 00110                 | x6
rs1           | 00101                 | x5
funct3        | 101                   | shift right logical
rd            | 01100                 | x12
opcode        | 0110011               |
-----------------------------------------------------
Assembled:    | 0000000 00110 00101 101 01100 0110011
-----------------------------------------------------

Instruction:   slt x10, x5, x6   # if (x5 < x6) x10 = 1 else x10 = 0
-----------------------------------------------------
Field         | Binary                | Info
-----------------------------------------------------
funct7        | 0000000               |
rs2           | 00110                 | x6
rs1           | 00101                 | x5
funct3        | 010                   | set less than
rd            | 01010                 | x10
opcode        | 0110011               |
-----------------------------------------------------
Assembled:    | 0000000 00110 00101 010 01010 0110011
-----------------------------------------------------